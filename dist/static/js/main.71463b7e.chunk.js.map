{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/auhtActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/project/ProjectSummary.js","components/project/ProjectList.js","components/dashboard/Dashboard.js","components/project/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","store/actions/projectActions.js","components/project/CreateProject.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","firebase","console","log","links","uid","Notifications","notifications","map","item","key","id","user","content","date","time","toDate","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","toString","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","Signup","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","createProject","dipsatch","authorId","add","Date","CreateProject","history","push","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","contetn","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.71463b7e.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/auhtActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li><NavLink to=\"/create\">New Project</NavLink></li>\r\n      <li><a onClick={props.signOut}>Logout</a></li>\r\n      <li><NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink></li>\r\n    </ul>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) => {\r\n  return (dispatch, getState, {getFirebase}) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase.auth().signInWithEmailAndPassword(\r\n      credentials.email,\r\n      credentials.password\r\n    ).then(() => {\r\n      console.log('login success')\r\n      dispatch({ type: 'LOGIN_SUCCESS'})\r\n    }).catch((err) => {\r\n      console.log('login error')\r\n      dispatch({ type: 'LOGIN_ERROR', err})\r\n    })\r\n  }\r\n}\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, {getFirebase}) => {\r\n    const firebase = getFirebase();\r\n    firebase.auth().signOut().then(() => {\r\n      dispatch({ type: 'SIGNOUT_SUCCESS'});\r\n    })\r\n  }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n  return(dispatch, getState, {getFirebase, getFirestore}) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n    firebase.auth().createUserWithEmailAndPassword(\r\n      newUser.email,\r\n      newUser.password\r\n    ).then((resp) => {\r\n      return firestore.collection('users').doc(resp.user.uid).set({\r\n        firstName: newUser.firstName,\r\n        lastName: newUser.lastName,\r\n        initials: newUser.firstName[0] + newUser.lastName[0]\r\n      })\r\n    }).then(() => {\r\n      dispatch({ type: 'SIGNUP_SUCCESS' })\r\n    }).catch(err => {\r\n      dispatch({ type: 'SIGNUP_ERROR', err })\r\n    })\r\n  }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li><NavLink to=\"/signup\">SignUp</NavLink></li>\r\n      <li><NavLink to=\"/signin\">SignIn</NavLink></li>\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default SignedOutLinks;","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport SignedInLinks from \"./SignedInLinks\";\r\nimport SignedOutLinks from \"./SignedOutLinks\";\r\nimport { connect } from 'react-redux';\r\n\r\nconst Navbar = (props) => {\r\n  const {auth, profile} = props;\r\n  console.log(auth);\r\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"brand-logo\">MarioPlan</Link>\r\n        { links }\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react'\r\nimport Moment from 'react-moment'\r\n\r\nconst Notifications = (props) => {\r\n  const { notifications } = props;\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <div className=\"card-title\">Notifications</div>\r\n          <ul className=\"notifications\">\r\n            { notifications && notifications.map(item => {\r\n              return (\r\n                <li key={item.id}>\r\n                  <span className=\"pink-text\">{item.user} </span>\r\n                  <span>{item.content}</span>\r\n                  <div className=\"grey-text note-data\">\r\n                    <Moment date={item.time.toDate()} />\r\n                  </div>\r\n                </li>\r\n              )\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notifications;","import React from 'react'\r\nimport Moment from 'react-moment';\r\n\r\nconst ProjectSummary = ({project}) => {\r\n  return(\r\n    <div className=\"card z-depth-0 project-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title\">{project.title}  </span>\r\n        <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n        <p className=\"grey-text\"><Moment date={project.createdAt.toDate().toString()} /></p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectSummary;","import React from 'react';\r\nimport ProjectSummary from \"./ProjectSummary\"\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProjectList = ({projects}) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n      { projects && projects.map(project => {\r\n        return (\r\n          <Link to={\"/project/\" + project.id} key={project.id}>\r\n            <ProjectSummary project={project} />\r\n          </Link>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectList; ","import React, { Component } from 'react';\r\nimport Notifications from \"./Notifications\"\r\nimport ProjectList from \"../project/ProjectList\"\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Dashboard extends Component {\r\n  render(){\r\n    const { projects, auth, notifications } = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={projects} />\r\n          </div>\r\n          <div className=\"col s12 m6\">\r\n            <Notifications notifications={notifications}/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'projects', orderBy: ['createdAt', 'desc'] },\r\n    { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }\r\n  ])\r\n)(Dashboard)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport Moment from 'react-moment'\r\n\r\nconst ProjectDetails = (props) => {\r\n  const { project, auth } = props;\r\n  if (!auth.uid) return <Redirect to='/signin' />\r\n  if (project) {\r\n    return (\r\n      <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <div className=\"card-title\">{ project.title }</div>\r\n            <p>{ project.content }</p>\r\n          </div>\r\n          <div className=\"card-action grey lighten-4 grey-text\">\r\n            <div>Posted by { project.authorFirstName } { project.authorLastName }</div>\r\n            <div><Moment date={project.createdAt.toDate().toString()} /></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    ) \r\n  } else {\r\n    return (\r\n      <div className=\"container center\">\r\n        <p>Loading Project...</p>\r\n      </div> \r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null\r\n  return {\r\n    project: project,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'projects' }\r\n  ])\r\n)(ProjectDetails)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/auhtActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\"\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state)\r\n  }\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if (auth.uid) return <Redirect to='/' />\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n            <div className=\"red-text center\">\r\n              { authError ? <p>{authError}</p> : null }\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: (creds) => dispatch(signIn(creds))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { signUp } from '../../store/actions/auhtActions'\r\n\r\nclass Signup extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\"\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    console.log(\"handle change\");\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state)\r\n  }\r\n  render() {\r\n    const {auth, authError} = this.props;\r\n    if (auth.uid) return <Redirect to='/' />\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n            <div className=\"center red-text\">\r\n              { authError ? <p>{ authError }</p> : null }\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signUp: (newUser) => dispatch(signUp(newUser))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);","export const createProject = (project) => {\r\n  return (dipsatch, getState, { getFirebase, getFirestore }) => {\r\n    //make async call to firebase\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid\r\n    firestore.collection('projects').add({\r\n      ...project,\r\n      authorFirstName: profile.firstName,\r\n      authorLastName: profile.lastName,\r\n      authorId: authorId,\r\n      createdAt: new Date()\r\n    }).then(() => {\r\n      dipsatch({ type: 'CREATE_PROJECT', project });\r\n    }).catch((err) => {\r\n      dipsatch({ type: 'CREATE_PROJECT_ERROR', err });\r\n    })\r\n  }\r\n}; ","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\"\r\nimport { createProject } from \"../../store/actions/projectActions\"\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: \"\",\r\n    content: \"\"\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.createProject(this.state)\r\n    this.props.history.push('/')\r\n  }\r\n  render() {\r\n    const {auth} = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"content\">Project Content</label>\r\n            <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project))\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\r\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from \"./components/layout/Navbar\";\nimport Dashboard from \"./components/dashboard/Dashboard\"\nimport ProjectDetails from './components/project/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport Signup from './components/auth/SignUp';\nimport CreateProject from './components/project/CreateProject';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route path=\"/project/:id\" component={ProjectDetails} />\n          <Route path=\"/signin\" component={SignIn} />\n          <Route path=\"/signup\" component={Signup} />\n          <Route path=\"/create\" component={CreateProject} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n  authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch(action.type) {\r\n    case 'LOGIN_ERROR':\r\n      return {\r\n        ...state,\r\n        authError: 'Login Failed'\r\n      }\r\n    case 'LOGIN_SUCCESS':\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      }\r\n    case 'SIGNOUT_SUCCESS':\r\n      console.log('signout success');\r\n      return state;\r\n    case 'SIGNUP_SUCCESS':\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      }\r\n    case 'SIGNUP_ERROR':\r\n      console.log('signup error');\r\n      return {\r\n        ...state,\r\n        authError: action.err.message\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default authReducer;","const initState = {\r\n  projects: [\r\n    {id: \"1\", title: 'dummy project 1', contetn: \"abc def ghi\"},\r\n    {id: \"2\", title: 'dummy project 2', contetn: \"abc def ghi\"},\r\n    {id: \"3\", title: 'dummy project 3', contetn: \"abc def ghi\"}\r\n  ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"CREATE_PROJECT\": \r\n      console.log(\"created project\", action.project)\r\n      return state;\r\n    case \"CREATE_PROJECT_ERROR\": \r\n      console.log('create project error', action.err)\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default projectReducer;","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyAQfyqNSJPWODZKyTIna0t-MNSF1TD0JcE\",\r\n  authDomain: \"khizar-mario-plan.firebaseapp.com\",\r\n  databaseURL: \"https://khizar-mario-plan.firebaseio.com\",\r\n  projectId: \"khizar-mario-plan\",\r\n  storageBucket: \"\",\r\n  messagingSenderId: \"239035086955\",\r\n  appId: \"1:239035086955:web:ee262a6e0c68e1b2e2592e\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n// firebase.firestore().settings({timestampsInSnapshots: true})\r\n\r\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(rootReducer,\n  compose( \n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true})\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n  serviceWorker.unregister();\n})\n\n"],"sourceRoot":""}